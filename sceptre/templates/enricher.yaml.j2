AWSTemplateFormatVersion: '2010-09-09'
Description: "Stack for the Movie Enricher application"

Parameters:
  ProjectName:
    Type: String
    Description: "The name of the project, used to prefix resource names."
  S3Url:
    Type: String
    Description: The full public URL of the S3 object containing the movie list.
  ArtifactBucketName:
    Type: String
    Description: "Artifacts S3 Bucket name"

# Jinja2 parsing block to get the bucket and object names from the S3Url
{% set url_parts = sceptre_user_data.stack_parameters.S3Url.split('/') %}
{% set domain = url_parts[2] %}
{% set bucket_name = domain.split('.')[0] %}
{% set object_key = '/'.join(url_parts[3:]) %}

Resources:
  # SQS Queue to receive "Top 10 Movies" messages from the FilterLambda
  TopMoviesQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      QueueName: !Sub "${ProjectName}-top-movies-events"
      MessageRetentionPeriod: 7200
      VisibilityTimeout: 300

  # IAM Role with least-privilege permissions for the FilterLambda function
  FilterLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-filter-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${ProjectName}-filter-lambda-policy"
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: "arn:aws:s3:::{{ bucket_name }}/{{ object_key }}"
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !GetAtt TopMoviesQueue.Arn

  # Lambda that reads from a S3 Bucket, filters the top 10 movies
  # and send them to the TopMoviesQueue
  FilterLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${ProjectName}-filter"
      Handler: filter.lambda_handler
      Runtime: python3.13
      Role: !GetAtt FilterLambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactBucketName
        S3Key: "filter_lambda.zip"  
      Timeout: 30
      Environment:
        Variables:
          S3_BUCKET_NAME: "{{ bucket_name }}"
          S3_OBJECT_KEY: "{{ object_key }}"
          SQS_QUEUE_URL: !Ref TopMoviesQueue
